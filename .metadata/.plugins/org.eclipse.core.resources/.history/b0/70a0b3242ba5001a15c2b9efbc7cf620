package playGame;
import java.util.ArrayList;
import Cards.Card;


public class Player {
	int playerNumber;
	ArrayList<Card> playerHand;
	int speciality;
	int highCard;
	double balance;
	boolean allIn;
	boolean folded;
	
	
	Player(int i){
		this.playerNumber = i;
		this.balance = 500;
		this.folded =false;
		this.highCard = 0;
		this.speciality = 0;
		
	}
	
	public void addHand(ArrayList<Card> incomingCards) {
		this.playerHand = incomingCards;
	}
	
	public String checkBet(double bidIntoPot) { 
		//Start with a basis Check to see if player is already All in
		
		if(this.allIn == true) {
			return "ALL IN";	
		}

		else if(this.balance - bidIntoPot > 0) {
			this.balance = this.balance - bidIntoPot;
			return "Okay";
		}
		
		else if(this.balance - bidIntoPot ==0 ){
			this.balance = this.balance - bidIntoPot;
			this.allIn = true;
			return "ALL IN";
		}
		
		else {
			return "Retry";
		}
		
	}
	
	public String bet(double bidIntoPot) {
		String resp = this.checkBet(bidIntoPot);
		return resp;
	}
	
	public int evalHighCard() {
		int highCard = 0;
		for (Card currCard: this.playerHand) {
			int currNumber = currCard.number;
			if (currNumber == 0) {  // If the card is an Ace treat it as high.
				highCard = 13;
			}
			else if(currNumber > highCard) {
				highCard = currNumber;
			}
			
		}
		return highCard;
		
	}
	
	public void evaluateSpeciality(ArrayList<Card> potCards) {
		EvaluateHand currHand = new EvaluateHand();
	}
	
	
	
}
